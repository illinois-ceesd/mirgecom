name: CI

on:
  pull_request:
  push:
    branches: main
  schedule:
  - cron:  '5 0 * * *'


jobs:
    flake8:
        name: Flake8
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        -
          uses: actions/setup-python@v1
          with:
            # matches compat target in setup.py
            python-version: '3.8'
        - name: Flake8 test
          run: |
            python3 -m venv myenv
            source myenv/bin/activate
            python -m pip install wheel
            python -m pip install flake8 pep8-naming flake8-quotes flake8-bugbear
            python -m flake8 --show-source --statistics "$(basename $GITHUB_REPOSITORY)" test examples setup.py doc/conf.py && echo "Flake8 found no errors."

    pylint:
        name: Pylint
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        -
          uses: actions/setup-python@v1
          with:
            python-version: '3.x'
        - name: Install
          run: |
            . .ci-support/install.sh

        - name: Run Pylint
          run: |
            MINIFORGE_INSTALL_DIR=.miniforge3
            . "$MINIFORGE_INSTALL_DIR/bin/activate" testing
            python -m pip install wheel
            python -m pip install pylint pyyaml
            ./run-pylint.sh

    pydocstyle:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        -
          uses: actions/setup-python@v1
          with:
            python-version: '3.x'
        - name: Run Pydocstyle
          run: |
            python3 -m venv myenv
            source myenv/bin/activate
            python -m pip install wheel
            python -m pip install pydocstyle
            python -m pydocstyle "$(basename $GITHUB_REPOSITORY)" && echo "pydocstyle found no errors."

    pytest:
        name: Pytest
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v2
        - name: Install
          run: |
            . .ci-support/install.sh

        - name: Run tests
          run: |
            MINIFORGE_INSTALL_DIR=.miniforge3
            . "$MINIFORGE_INSTALL_DIR/bin/activate" testing
            cd test
            python -m pytest --durations=0 --tb=native --junitxml=pytest.xml --doctest-modules -rxsw -sv -k compose_index_maps test_lazy.py
